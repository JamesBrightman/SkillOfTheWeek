{"version":3,"sources":["Utils/Theme.js","Utils/Queries.js","HSCall2.js","HSCall.js","Utils/SkeletonWrapper.js","SkillCard/SkillCard.js","SkillCard/CurrentSkill.js","SOTWmain.js","App.js","index.js"],"names":["Theme","createMuiTheme","palette","primary","main","blue","fetchUser","name","a","fetch","res","json","HSCall2","names","initalXp","dataHolder","map","ele","index","data","useQuery","refetchInterval","status","stats","runecrafting","HSCall","initialXp","push","SkeletonWrapper","props","loading","Skeleton","width","children","useStyles","makeStyles","root","display","alignItems","justifyContent","flexGrow","flexDirection","card","margin","cardText","textAlign","cardHeader","padding","cardPlacement","position","paddingLeft","paddingTop","SkillCard","cardBackingColor","classes","xpGain","toLocaleString","xpCurrent","xp","xpInitial","placement","className","Card","style","backgroundColor","Typography","variant","level","CurrentSkill","theme","pageHeader","color","height","appBarSpacer","mixins","toolbar","SOTWmain","AppBar","sort","b","experience","App","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b8bee20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nexport const Theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue[500]\r\n        }\r\n    },\r\n});","export const fetchUser = async (name) => {\r\n    const res = await fetch(`https://cors-anywhere.herokuapp.com/https://oldschool.tools/ajax/hiscore-stats/${name}`);\r\n    return res.json(); //gets the data - returns a promise\r\n};","import React from \"react\";\r\nimport {HSCall} from \"./HSCall\";\r\n\r\nexport const HSCall2 = (names, initalXp) => {\r\n\r\n    let dataHolder = [];\r\n    names.map((ele, index) => {\r\n        let data = HSCall(ele);\r\n        if(data !== \"Loading\") {\r\n            data.name = ele;\r\n            data.initialXp = initalXp[index]\r\n        }\r\n        dataHolder.push(data);\r\n    });\r\n\r\n    return (dataHolder)\r\n};","import {useQuery} from \"react-query\";\r\nimport {fetchUser} from \"./Utils/Queries\";\r\n\r\nexport const HSCall = (name) => {\r\n    const {data, status} = useQuery([ name, \"rsApi\"], fetchUser, {\r\n        refetchInterval: \"300000\" //5 mins\r\n    });\r\n\r\n    if(status === \"success\") {\r\n        return(data.stats.runecrafting);\r\n    }\r\n    else {\r\n        return \"Loading\"\r\n    }\r\n    //  Handle errors\r\n};","import React from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport const SkeletonWrapper = (props) => {\r\n    return (\r\n        <>\r\n            {props.loading ?\r\n                <Skeleton width={\"100%\"}>{props.children}</Skeleton>\r\n                :\r\n                <>{props.children}</>\r\n            }\r\n        </>\r\n    )\r\n};","import React, {useEffect, useState} from \"react\";\r\nimport {Card, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {SkeletonWrapper} from \"../Utils/SkeletonWrapper\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexGrow: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    card: {\r\n        width: \"85%\",\r\n        margin: \"1rem\"\r\n    },\r\n    cardText: {\r\n        textAlign: \"center\"\r\n    },\r\n    cardHeader: {\r\n        textAlign: \"center\",\r\n        padding: \"0.5rem\"\r\n    },\r\n    cardPlacement: {\r\n        position: \"absolute\",\r\n        paddingLeft: \"1rem\",\r\n        paddingTop: \"1rem\",\r\n\r\n    }\r\n});\r\n\r\nexport const SkillCard = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let xpGain = props.xpGain ? props.xpGain.toLocaleString() : props.xpGain;\r\n    let xpCurrent = props.xp ? props.xp.toLocaleString() : props.xp;\r\n    let xpInitial = props.initialXp ? props.initialXp.toLocaleString() : props.initialXp;\r\n    let cardBackingColor;\r\n\r\n    switch (props.placement) {\r\n        case 1:\r\n            cardBackingColor = \"rgba(255,222,0,0.35)\";\r\n            break;\r\n        case 2:\r\n            cardBackingColor = \"rgba(109,109,109,0.35)\";\r\n            break;\r\n        case 3:\r\n            cardBackingColor = \"rgba(97,49,14,0.35)\";\r\n            break;\r\n        default:\r\n            cardBackingColor = \"#fff\";\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.card} style={{backgroundColor: cardBackingColor}}>\r\n                <SkeletonWrapper loading={props.loading}>\r\n                    <Typography className={classes.cardPlacement} variant=\"h6\"><b>#{props.placement}</b></Typography>\r\n                    <Typography className={classes.cardHeader} variant=\"h4\"><b>{props.name}</b></Typography>\r\n                    <Typography className={classes.cardText} variant=\"h6\">Level: {props.level}</Typography>\r\n                    <Typography className={classes.cardText} variant=\"h6\">XP Gained: {xpGain}</Typography>\r\n                    <Typography className={classes.cardText} variant=\"h6\">Current XP: {xpCurrent}</Typography>\r\n                    <Typography className={classes.cardText} variant=\"h6\">Initial XP: {xpInitial}</Typography>\r\n                </SkeletonWrapper>\r\n            </Card>\r\n        </div>\r\n    )\r\n};","import React, {useEffect, useState} from \"react\";\r\nimport {Card, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexGrow: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    card: {\r\n        width: \"100%\",\r\n        margin: \"1rem\"\r\n    },\r\n    cardText: {\r\n        textAlign: \"center\"\r\n    },\r\n    cardHeader: {\r\n        textAlign: \"center\",\r\n        padding: \"0.5rem\"\r\n    }\r\n});\r\n\r\nexport const CurrentSkill = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.card}>\r\n                <Typography className={classes.cardHeader} variant=\"h6\">Skill of the Week</Typography>\r\n                <Typography className={classes.cardText} variant=\"h4\"><b>Runecrafing</b></Typography>\r\n            </Card>\r\n        </div>\r\n    )\r\n};","import React, {useEffect, useState} from \"react\";\r\nimport {HSCall2} from \"./HSCall2\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {AppBar, Typography, Grid} from \"@material-ui/core\";\r\nimport {SkillCard} from \"./SkillCard/SkillCard\";\r\nimport {CurrentSkill} from \"./SkillCard/CurrentSkill\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        color: '#FFF',\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: '64px',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar\r\n}));\r\n\r\nexport const SOTWmain = () => {\r\n    const classes = useStyles();\r\n\r\n    const names = [\"PrussianBoy\",\r\n        \"BeachPlease9\",\r\n        \"WhiskyDry\",\r\n        \"OS Anthony\",\r\n        \"Bekt\",\r\n        \"Cure Other\",\r\n        \"BadAtCOX\",\r\n        \"Moltivation\",\r\n        \"Mi11s\",\r\n        \"Hexico\",\r\n        \"Toennes\",\r\n        \"Praenthos\",\r\n        \"NexxHype\",\r\n        \"Drm130\",\r\n        \"Cave Closer\",\r\n        \"AdamInAtl\",\r\n        \"Tanqray\",\r\n        \"OGRapo\",\r\n        \"TopKawaii\"];\r\n    const initalXp = [53035,\r\n        689730,\r\n        3600941,\r\n        636507,\r\n        611494,\r\n        1003824,\r\n        11256563,\r\n        2276440,\r\n        1844101,\r\n        1181799,\r\n        115636,\r\n        13730002,\r\n        3798913,\r\n        11328619,\r\n        5702334,\r\n        446070,\r\n        7890850,\r\n        907042,\r\n        823010];\r\n\r\n    let dataHolder = HSCall2(names, initalXp);\r\n\r\n    return (\r\n        <div>\r\n            <AppBar className={classes.pageHeader}>\r\n                <Typography style={{paddingLeft: \"10px\"}} variant=\"h5\">Bekt CC - Skill of the Week</Typography>\r\n            </AppBar>\r\n\r\n            <div className={classes.appBarSpacer}/>\r\n\r\n            <CurrentSkill/>\r\n\r\n            {dataHolder.sort((a, b) => (b.experience - b.initialXp) - (a.experience - a.initialXp)).map((ele, index) =>\r\n                ele === \"Loading\" ?\r\n                    <SkillCard loading={true}/>\r\n                    :\r\n                    <SkillCard\r\n                        loading={false}\r\n                        name={ele.name}\r\n                        placement={index + 1}\r\n                        level={ele.level}\r\n                        xp={ele.experience}\r\n                        initialXp={ele.initialXp}\r\n                        xpGain={ele.experience - ele.initialXp}/>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n};","import React from 'react';\nimport {Theme} from \"./Utils/Theme\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {SOTWmain} from \"./SOTWmain\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={Theme}>\n      <SOTWmain/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}